[tool.coverage.run]
branch = true
source = [ "platform" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../coverage/backend/html' --cov-report xml:'../coverage/backend/coverage.xml' --html='../reports/backend/unittests/html/index.html' --junitxml='../reports/backend/unittests/junit.xml'"

[tool.poetry]
name = "platform"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = [ ]
license = 'Proprietary'
readme = 'README.md'

  [[tool.poetry.packages]]
  include = "platform"

  [tool.poetry.dependencies]
  python = ">=3.10,<=3.12.4"
  django-cors-headers = "^4.4.0"
  dj-database-url = "^2.2.0"
  python-dotenv = "^1.0.1"
  psycopg = "^3.2.1"
  psycopg-binary = "^3.2.1"
  psycopg-pool = "^3.2.2"
  tox = "^4.16.0"
  pytest-django = "^4.8.0"
  pytest = "^8.3.2"
  pyjwt = "^2.9.0"
  cryptography = "^43.0.0"
  redis = {extras = ["hiredis"], version = "^5.0.8"}
  httpx = "^0.27.0"
  django = "5.0.7"
  ruff = "^0.5.6"

  [tool.poetry.group.dev.dependencies]
  autopep8 = "2.0.2"
  ruff = "0.5.6"
  pytest = "8.3.2"
  pytest-sugar = "1.0.0"
  pytest-cov = "5.0.0"
  pytest-html = "4.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
